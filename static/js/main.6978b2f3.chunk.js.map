{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","react_default","a","createElement","react","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","Object","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","_this","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","prevProps","this","editing","selectedPost","imagePath","Input_Input","bind","FilePicker","Image_Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","page","graphqlQuery","query","variables","fetch","method","headers","Authorization","token","Content-Type","body","JSON","stringify","res","json","resData","errors","Error","data","catchError","statusUpdateHandler","event","preventDefault","userStatus","newPostHandler","startEditPostHandler","postId","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","fileResData","filePath","replace","resDataField","creator","createdAt","updatedPosts","updatedTotalPosts","findIndex","pop","unshift","statusInputChangeHandler","deletePostHandler","_this2","user","_this3","ErrorHandler","Feed_FeedEdit_FeedEdit","onSubmit","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","name","Date","toLocaleDateString","SinglePost","match","params","Login","loginForm","password","inputChangeHandler","Login_createForOfIteratorHelper","Auth_Auth","onLogin","Signup","signupForm","Signup_createForOfIteratorHelper","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","login","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","withRouter","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.6978b2f3.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from \"react\";\n\nimport Post from \"../../components/Feed/Post/Post\";\nimport Button from \"../../components/Button/Button\";\nimport FeedEdit from \"../../components/Feed/FeedEdit/FeedEdit\";\nimport Input from \"../../components/Form/Input/Input\";\nimport Paginator from \"../../components/Paginator/Paginator\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ErrorHandler from \"../../components/ErrorHandler/ErrorHandler\";\nimport \"./Feed.css\";\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: \"\",\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false,\n  };\n\n  componentDidMount() {\n    const graphqlQuery = {\n      query: `\n      {\n        user {\n          status\n        }\n      }`,\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"fetching status failed!\");\n        }\n        this.setState({ status: resData.data.user.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = (direction) => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === \"next\") {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === \"previous\") {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQuery = {\n      query: `\n        query FetchPosts($page: Int) {\n          posts(page: $page) {\n            posts {\n              _id\n              title\n              content\n              creator {\n                name\n              }\n              createdAt\n            }\n            totalPosts\n          }\n        }\n      `,\n      variables: {\n        page,\n      },\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          // console.log(resData);\n          throw new Error(\"Fetching posts faild!\");\n        }\n        this.setState({\n          posts: resData.data.posts.posts.map((post) => {\n            // console.log(post);\n            return {\n              ...post,\n              imagePath: post.imageUrl,\n            };\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false,\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = (event) => {\n    event.preventDefault();\n    const graphqlQuery = {\n      query: `\n        mutation UpdateUserStatus($userStatus: String!) {\n          updateStatus(status: $userStatus) {\n            status\n          }\n        }\n      `,\n      variables: {\n        userStatus: this.state.status,\n      },\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"updating status failed!\");\n        }\n        // console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = (postId) => {\n    this.setState((prevState) => {\n      const loadedPost = { ...prevState.posts.find((p) => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost,\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = (postData) => {\n    // console.log(\"postData\", postData);\n    this.setState({\n      editLoading: true,\n    });\n    const formData = new FormData();\n    formData.append(\"image\", postData.image);\n    if (this.state.editPost) {\n      formData.append(\"oldPath\", this.state.editPost.imagePath);\n    }\n    // // console.log(formData);\n    // // console.log(postData);\n    fetch(\"http://localhost:8080/post-image\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: formData,\n    })\n      .then((res) => {\n        // console.log(res);\n        return res.json();\n      })\n      .then((fileResData) => {\n        // console.log(fileResData);\n        let imageUrl;\n        if (fileResData.filePath) {\n          imageUrl = fileResData.filePath.replace(\"\\\\\", \"/\");\n        }\n        // console.log(imageUrl);\n        let graphqlQuery = {\n          query: `\n            mutation CreateNewPost($title: String!, $content: String!, $imageUrl: String!) {\n              createPost(postInput: {\n                title: $title,\n                content: $content,\n                imageUrl: $imageUrl \n              }) {\n                _id\n                title\n                content\n                imageUrl\n                creator {\n                  name\n                }\n                createdAt\n              }       \n          }\n        `,\n          variables: {\n            title: postData.title,\n            content: postData.content,\n            imageUrl: imageUrl,\n          },\n        };\n\n        if (this.state.editPost) {\n          graphqlQuery = {\n            query: `\n                mutation UpdateExistingPost($postId: ID!, $title: String!, $content: String!, $imageUrl: String!) {\n                  updatePost(id: $postId, postInput: {\n                    title: $title,\n                    content: $content,\n                    imageUrl: $imageUrl \n                  }) {\n                    _id\n                    title\n                    content\n                    imageUrl\n                    creator {\n                      name\n                    }\n                    createdAt\n                  }       \n              }\n            `,\n            variables: {\n              postId: this.state.editPost._id,\n              title: postData.title,\n              content: postData.content,\n              imageUrl: imageUrl ? imageUrl : \"undefined\",\n            },\n          };\n        }\n\n        return fetch(\"http://localhost:8080/graphql\", {\n          method: \"POST\",\n          body: JSON.stringify(graphqlQuery),\n          headers: {\n            Authorization: \"Bearer \" + this.props.token,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"creating post has failed. please check if everything is all right.\"\n          );\n        }\n        if (resData.errors) {\n          // console.log(resData.errors);\n          throw new Error(\"creating post failed!\");\n        }\n        // console.log(resData);\n        let resDataField = \"createPost\";\n        if (this.state.editPost) {\n          resDataField = \"updatePost\";\n        }\n        const post = {\n          _id: resData.data[resDataField]._id,\n          title: resData.data[resDataField].title,\n          content: resData.data[resDataField].content,\n          creator: resData.data[resDataField].creator,\n          createdAt: resData.data[resDataField].createdAt,\n          imagePath: resData.data[resDataField].imageUrl,\n        };\n        this.setState((prevState) => {\n          let updatedPosts = [...prevState.posts];\n          // console.log(updatedPosts);\n          let updatedTotalPosts = prevState.totalPosts;\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              (p) => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedTotalPosts++;\n            if (prevState.posts.length >= 2) {\n              // console.log(updatedPosts);\n              updatedPosts.pop();\n            }\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n            totalPosts: updatedTotalPosts,\n          };\n        });\n      })\n      .catch((err) => {\n        // console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = (postId) => {\n    this.setState({ postsLoading: true });\n    const graphqlQuery = {\n      query: `\n        mutation {\n          deletePost(id: \"${postId}\")\n        }\n      `,\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Deleting post failed!\");\n        }\n        // // console.log(resData);\n        this.loadPosts();\n        // this.setState((prevState) => {\n        //   const updatedPosts = prevState.posts.filter((p) => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch((err) => {\n        // console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = (error) => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: \"center\" }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, \"previous\")}\n              onNext={this.loadPosts.bind(this, \"next\")}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map((post) => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from \"react\";\n\nimport Image from \"../../../components/Image/Image\";\nimport \"./SinglePost.css\";\n\nclass SinglePost extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    date: \"\",\n    image: \"\",\n    content: \"\",\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    const graphqlQuery = {\n      query: `\n        query FetchSinglePost($postId: ID!) {\n          post(id: $postId) {\n            title\n            content\n            imageUrl\n            creator {\n              name\n            }\n            createdAt\n          }\n        }\n      `,\n      variables: {\n        postId\n      }\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        // console.log(\"res\", resData);\n        if (resData.error) {\n          throw new Error(\"fetching post faild!!\");\n        }\n        this.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          image: \"http://localhost:8080/\" + resData.data.post.imageUrl,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString(\n            \"en-US\"\n          ),\n          content: resData.data.post.content,\n        });\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport MainNavigation from \"./components/Navigation/MainNavigation/MainNavigation\";\nimport MobileNavigation from \"./components/Navigation/MobileNavigation/MobileNavigation\";\nimport ErrorHandler from \"./components/ErrorHandler/ErrorHandler\";\nimport FeedPage from \"./pages/Feed/Feed\";\nimport SinglePostPage from \"./pages/Feed/SinglePost/SinglePost\";\nimport LoginPage from \"./pages/Auth/Login\";\nimport SignupPage from \"./pages/Auth/Signup\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const expiryDate = localStorage.getItem(\"expiryDate\");\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem(\"userId\");\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = (isOpen) => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiryDate\");\n    localStorage.removeItem(\"userId\");\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const graphqlQuery = {\n      query: `\n        query UserLogin($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            token\n            userId\n          }\n        }\n      `,\n      variables: {\n        email: authData.email,\n        password: authData.password,\n      },\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"validation failed. Make sure that email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"User login failed!\");\n        }\n        // console.log(resData);\n        this.setState({\n          isAuth: true,\n          token: resData.data.login.token,\n          authLoading: false,\n          userId: resData.data.login.userId,\n        });\n        localStorage.setItem(\"token\", resData.data.login.token);\n        localStorage.setItem(\"userId\", resData.data.login.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch((err) => {\n        // console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    // console.log(authData.signupForm.password.value);\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    // console.log(authData);\n    const graphqlQuery = {\n      query: `\n      mutation CreateNewUser($email: String!, $name: String!, $password: String!) {\n        createUser(userInput: {\n          email: $email,\n          name: $name,\n          password: $password})\n        {\n          _id\n          email\n        }\n      }`,\n      variables: {\n        email: authData.signupForm.email.value,\n        name: authData.signupForm.name.value,\n        password: authData.signupForm.password.value,\n      },\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // // console.log(res);\n        return res.json();\n      })\n      .then((resData) => {\n        // console.log(resData);\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error(\"User creation failed!\");\n        }\n        // console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace(\"/\");\n      })\n      .catch((err) => {\n        // console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  setAutoLogout = (milliseconds) => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={(props) => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={(props) => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}